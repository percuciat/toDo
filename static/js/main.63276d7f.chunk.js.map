{"version":3,"sources":["components/app-header/index.js","components/search-panel/index.js","components/post-status-filter/index.js","components/post-list-item/ModalDelete.js","components/post-list-item/BtnEdit.js","components/post-list-item/BtnImportant.js","components/post-list-item/BtnDelete.js","components/post-list-item/index.js","components/post-list/index.js","components/post-add-form/index.js","components/app/index.js","index.js"],"names":["Header","styled","header","props","colored","AppHeader","allPosts","liked","className","lastLetter","toString","split","length","grammarNamePost","SearchPanel","state","search","onUpdateSearch","e","target","value","toLowerCase","setState","updateSearch","type","placeholder","onChange","this","Component","PostStatusFilter","buttons","name","label","map","filter","onFilterSelect","active","Button","key","onClick","ModalDelete","onDelete","show","cancelModalDelete","Modal","aria-labelledby","centered","variant","Title","Footer","BtnEdit","onEditPost","title","icon","BtnImportant","onToggleImportant","BtnDelete","openModalDelete","date","Date","toLocaleString","PostListItem","formEdit","text","closeEditPost","actionEditPost","saveEditPost","onEditItem","id","onToggleLiked","important","like","ListGroup","Item","as","action","onInput","PostList","posts","onToggle","onEdit","item","defaultProps","PostAddForm","onValueChange","onSubmit","preventDefault","onAdd","library","add","fab","faCheckSquare","faStar","faTrash","faHeart","faPencilAlt","faCheck","faBan","AppBlock","main","AppIndex","data","deleteItem","index","findIndex","elem","before","slice","after","getUniqId","Math","random","substr","addItem","newItem","flag","searchPost","items","indexOf","filterPosts","visiblePosts","Container","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.63276d7f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './app-header.scss'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport styled from 'styled-components'\r\n\r\nconst Header = styled.header `\r\n   display: flex;\r\n    align-items: flex-end;\r\n   justify-content: space-between;\r\n   .header-title {\r\n     font-size: 26px;\r\n     cursor: pointer;\r\n     :hover{\r\n        color: orange;\r\n     }\r\n   }\r\n   .header-subtitle {\r\n      font-size: 1.2rem;\r\n      color: ${props => props.colored ? 'black' : 'red'}\r\n      }\r\n`;\r\n\r\n\r\n\r\nconst AppHeader = ({allPosts, liked}) => {\r\n    const grammarNamePost = () => {\r\n        const lastLetter = allPosts.toString().split('');\r\n        if(lastLetter[lastLetter.length - 1] === '1' && allPosts !== 11){\r\n            return 'запись'\r\n        }\r\n        else if(lastLetter[lastLetter.length - 1] >= 2\r\n            && lastLetter[lastLetter.length - 1] <= 4\r\n            && allPosts !== 12\r\n            && allPosts !== 13\r\n            && allPosts !== 14){\r\n            return 'записи'\r\n        } else {\r\n            return 'записей'\r\n        }\r\n    };\r\n    return (\r\n            <Header colored>\r\n                <h1 className=\"header-title\">Maksim Semenov</h1>\r\n                <h2 className=\"header-subtitle\">{allPosts} {grammarNamePost()}, из них понравилось {liked}</h2>\r\n            </Header>\r\n    )\r\n};\r\n\r\nexport default AppHeader;","import React, {Component} from \"react\";\r\nimport './search-panel.scss'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nclass SearchPanel extends Component {\r\n    state = {\r\n        search: ''\r\n    };\r\n    onUpdateSearch = (e) => {\r\n        const search = e.target.value.toLowerCase();\r\n        this.setState({search});\r\n        this.props.updateSearch(search)\r\n    };\r\n    render() {\r\n        return (\r\n            <input className=\"form-control search-input\" type=\"text\" placeholder=\"Поиск по записям\" onChange={this.onUpdateSearch}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchPanel;","import React, {Component} from \"react\";\r\nimport './post-status-filter.scss'\r\nimport {Button} from \"react-bootstrap\";\r\n\r\nclass PostStatusFilter extends Component {\r\n    state = {\r\n        buttons: [\r\n            {name: 'all', label: 'Все'},\r\n            {name: 'like', label: 'Понравилось'},\r\n        ],\r\n    };\r\n    render() {\r\n        const buttons = this.state.buttons.map(({label, name}) => {\r\n            const {filter, onFilterSelect} = this.props;\r\n            const active = filter === name;\r\n            return (\r\n                <Button key={name} type=\"button\" className={active ? 'btn-info' : 'btn-light'} onClick={() => onFilterSelect(name)}>{label}</Button>\r\n            )\r\n        });\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default PostStatusFilter;","import React from \"react\";\r\nimport './post-list-item.scss'\r\nimport {Button, Modal} from \"react-bootstrap\";\r\n\r\n\r\nconst ModalDelete = ({ onDelete, show, cancelModalDelete }) => {\r\n    return (\r\n        <Modal aria-labelledby=\"contained-modal-title-vcenter\"\r\n               centered\r\n               show={show} variant=\"success\">\r\n            <Modal.Header>\r\n                <Modal.Title>Вы действительно хотите удалить запись?</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Footer>\r\n                <Button onClick={onDelete} variant=\"outline-danger\">\r\n                    Да\r\n                </Button>\r\n                <Button onClick={cancelModalDelete} variant=\"outline-success\">\r\n                    нет\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n};\r\n\r\nexport default ModalDelete;","import React from \"react\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport './post-list-item.scss'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst BtnEdit = ({onEditPost}) => {\r\n    return (\r\n        <Button className=\"btn btn-edit\" variant=\"warning\" onClick={onEditPost} title=\"Редактировать\">\r\n            <FontAwesomeIcon icon=\"pencil-alt\" />\r\n        </Button>\r\n    )\r\n};\r\n\r\nexport default BtnEdit","import React from \"react\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport './post-list-item.scss'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst BtnImportant = ({onToggleImportant}) => {\r\n    return (\r\n        <Button type=\"button\" className=\"btn btn-star btn-sm\" onClick={onToggleImportant} title=\"Избранное\">\r\n            <FontAwesomeIcon icon=\"star\" />\r\n        </Button>\r\n    )\r\n};\r\n\r\nexport default BtnImportant\r\n\r\n","import React from \"react\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport './post-list-item.scss'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst BtnDelete = ({openModalDelete}) => {\r\n    return (\r\n        <Button type=\"button\" className=\"btn btn-trash btn-sm\" onClick={openModalDelete} title=\"Удалить\">\r\n            <FontAwesomeIcon icon=\"trash\" />\r\n        </Button>\r\n    )\r\n};\r\n\r\nexport default BtnDelete","import React, {Component} from \"react\";\r\nimport './post-list-item.scss'\r\nimport ModalDelete from \"./ModalDelete\"\r\nimport BtnEdit from \"./BtnEdit\"\r\nimport BtnImportant from \"./BtnImportant\"\r\nimport BtnDelete from \"./BtnDelete\"\r\nimport {ListGroup} from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\n\r\nconst date = new Date().toLocaleString();\r\n\r\nclass PostListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    state = {\r\n        formEdit: false,\r\n        text: '',\r\n        show: false,\r\n    };\r\n    onEditPost = () => {\r\n        this.setState(({formEdit: true}));\r\n    };\r\n    closeEditPost = () => {\r\n        this.setState(({formEdit: false,\r\n            text : this.props.label}));\r\n    };\r\n    actionEditPost = (e) => {\r\n        this.setState({text : e.target.value});\r\n    };\r\n    saveEditPost = () => {\r\n        if(this.state.text === ''){\r\n            this.props.onEditItem(this.props.id, this.props.label);\r\n        } else {\r\n            this.props.onEditItem(this.props.id, this.state.text);\r\n        }\r\n        this.setState({formEdit: false});\r\n    };\r\n    openModalDelete = () => {\r\n        this.setState({show: true});\r\n    };\r\n    cancelModalDelete = () => {\r\n        this.setState({show: false});\r\n    };\r\n    render() {\r\n        const { label, onDelete, onToggleImportant, onToggleLiked, important, like } = this.props;\r\n        const {  formEdit } = this.state;\r\n        return <>\r\n                <ListGroup.Item as=\"li\" className={important ? \"app-list-item important\" : \"app-list-item\"}>\r\n                    <div className=\"info\">\r\n                        <p className=\"date\">Дата <strong>{date}</strong></p>\r\n                        <p className=\"app-list-item-label\" onClick={onToggleLiked}>\r\n                            {label}\r\n                        </p>\r\n                        <form className={formEdit ? \"form-edit active\" : \"form-edit\"} action=\"#\">\r\n                            <label>\r\n                                <textarea className=\"form-edit-field\" placeholder={label} onInput={this.actionEditPost}></textarea>\r\n                            </label>\r\n                            <div className=\"form-edit-wrapper\">\r\n                                <button type=\"button\" className=\"form-edit-btn btn-success\" onClick={this.saveEditPost} title=\"Сохранить изменения\">\r\n                                    <FontAwesomeIcon icon=\"check\" />\r\n                                </button>\r\n                                <button type=\"button\" className=\"form-edit-btn btn-danger\" onClick={this.closeEditPost} title=\"Отмена\">\r\n                                    <FontAwesomeIcon icon=\"ban\" />\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"action\">\r\n                        <BtnEdit onEditPost={this.onEditPost}/>\r\n                        <BtnImportant onToggleImportant={onToggleImportant}/>\r\n                        <BtnDelete openModalDelete={this.openModalDelete}/>\r\n                        <FontAwesomeIcon className={like ? \"app-list-item-icon like\" : \"app-list-item-icon\"} icon=\"heart\" />\r\n                    </div>\r\n                    <ModalDelete onDelete={onDelete}\r\n                                 show={this.state.show}\r\n                                 cancelModalDelete={this.cancelModalDelete} />\r\n                </ListGroup.Item>\r\n            </>\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default PostListItem;","import React from \"react\";\r\nimport PropTypes from \"prop-types\"\r\nimport PostListItem from \"../post-list-item\";\r\nimport {ListGroup, } from \"react-bootstrap\";\r\nimport './post-list.scss'\r\n\r\nconst PostList = ({posts, onDelete, onToggle, onEdit}) => {\r\n    return (\r\n        <ListGroup as=\"ul\" className=\"app-list\">\r\n            {\r\n                posts.map(item => {\r\n                   return <PostListItem\r\n                       label={item.label}\r\n                       important={item.important}\r\n                       like={item.like}\r\n                       key={item.id}\r\n                       onDelete={() => onDelete(item.id)}\r\n                       onToggleImportant={() => onToggle(item.id)}\r\n                       onToggleLiked={() => onToggle(item.id, 'like')}\r\n                       onEditItem={onEdit}\r\n                       id={item.id}\r\n                   />\r\n                })\r\n            }\r\n        </ListGroup>\r\n    )\r\n};\r\n\r\nPostList.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    important: PropTypes.bool,\r\n    onToggleLiked: PropTypes.func,\r\n    onToggleImportant: PropTypes.func,\r\n};\r\n\r\nPostList.defaultProps = {\r\n    label: 'Нет записей',\r\n};\r\n\r\nexport default PostList;","import React, {Component} from \"react\";\r\nimport PropTypes from \"prop-types\"\r\nimport {Button, } from \"react-bootstrap\";\r\nimport './post-add-form.scss'\r\n\r\n\r\nclass PostAddForm extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    state = {\r\n        text: '',\r\n    };\r\n    onValueChange = (e) => {\r\n        this.setState({\r\n            text: e.target.value\r\n        })\r\n    };\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onAdd(this.state.text);\r\n        this.setState({\r\n            text: ''\r\n        })\r\n    };\r\n    render() {\r\n        return (\r\n            <form action=\"#\" className=\"bottom-panel d-flex\" onSubmit={this.onSubmit}>\r\n                <input type=\"text\" placeholder=\"Следующая цель для достижения\" className=\"form-control new-form-label\"\r\n                    onChange={this.onValueChange}\r\n                       value={this.state.text}\r\n                />\r\n                <Button type=\"submit\" className=\"btn\">Добавить</Button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nPostAddForm.propTypes = {\r\n    onAdd: PropTypes.func,\r\n};\r\n\r\nexport default PostAddForm;","import React, {Component} from 'react';\r\nimport AppHeader from '../app-header'\r\nimport SearchPanel from '../search-panel'\r\nimport PostStatusFilter from '../post-status-filter'\r\nimport PostList from '../post-list'\r\nimport PostAddForm from '../post-add-form'\r\nimport styled from 'styled-components'\r\nimport './app.scss'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Container} from \"react-bootstrap\";\r\nimport {library} from \"@fortawesome/fontawesome-svg-core\";\r\nimport {fab} from \"@fortawesome/free-brands-svg-icons\";\r\nimport {faCheckSquare, faStar, faTrash, faHeart, faPencilAlt, faCheck, faBan} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nlibrary.add(fab, faCheckSquare, faStar, faTrash, faHeart, faPencilAlt, faCheck, faBan);\r\n\r\n\r\nconst AppBlock = styled.main`\r\n    background-color: transparent;\r\n`;\r\n\r\n\r\nclass AppIndex extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    state = {\r\n        data: [\r\n            {id: 1, label: \"Начинаю учить React\", important: true, like: false},\r\n            {id: 2, label: \"Купить молоко\", important: false, like: false},\r\n            {id: 3, label: \"Купить хлеб\", important: false, like: false},\r\n        ],\r\n        search: '',\r\n        filter: 'all',\r\n    };\r\n    deleteItem = (id) => {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id); // получаем конкретный id элемента по клику\r\n\r\n            const before = data.slice(0, index);\r\n            const after = data.slice(index + 1);\r\n\r\n            const newArr = [...before, ...after];\r\n\r\n            return {\r\n                data: newArr\r\n            }\r\n        });\r\n    };\r\n    getUniqId = () => {\r\n        return '_' + Math.random().toString(36).substr(2, 9);\r\n    };\r\n    addItem = (text) => {\r\n        const newItem = {\r\n            label: text,\r\n            important: false,\r\n            id: this.getUniqId()\r\n        };\r\n        this.setState(({data}) => {\r\n            const newArr = [...data, newItem];\r\n            return {\r\n                data: newArr\r\n            }\r\n        });\r\n    };\r\n    onToggle = (id, flag) => {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n\r\n            const before = data[index];\r\n\r\n            let newItem;\r\n\r\n            if (flag) {\r\n                newItem = {...before, like: !before.like};\r\n            } else {\r\n                newItem = {...before, important: !before.important};\r\n            }\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n\r\n            return {\r\n                data: newArr\r\n            }\r\n        })\r\n    };\r\n    onEditItem = (id, value) => {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n\r\n            const before = data[index];\r\n\r\n            let newItem = {...before, label: value};\r\n\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n\r\n            return {\r\n                data: newArr\r\n            }\r\n        });\r\n    };\r\n    searchPost = (items, search) => {\r\n        if (search.length === 0) {\r\n            return items\r\n        }\r\n\r\n        return items.filter(item => {\r\n            return item.label.toLowerCase().indexOf(search) > -1\r\n        });\r\n\r\n    };\r\n    onUpdateSearch = (search) => { // обновление строки поиска\r\n        this.setState({search})\r\n    };\r\n\r\n    filterPosts = (data, filter) => {\r\n        if (filter === 'like'){\r\n            return data.filter(item => item.like); // проверяем наличие поля like в true\r\n        } else {\r\n            return data\r\n        }\r\n    };\r\n    onFilterSelect = (filter) => {\r\n        this.setState({filter})\r\n    };\r\n    render() {\r\n        const {data, search, filter} = this.state;\r\n        const liked = data.filter(item => item.like).length;\r\n        const allPosts = data.length;\r\n\r\n        const visiblePosts = this.filterPosts(this.searchPost(data, search), filter); //\r\n\r\n        return <Container className=\"customContainer\">\r\n            <AppHeader liked={liked}\r\n                       allPosts={allPosts}\r\n            />\r\n            <AppBlock className=\"main\">\r\n                <div className=\"search-panel d-flex\">\r\n                    <SearchPanel updateSearch={this.onUpdateSearch}/>\r\n                    <PostStatusFilter\r\n                        filter={filter}\r\n                        onFilterSelect={this.onFilterSelect}\r\n                    />\r\n                </div>\r\n                <PostList posts={visiblePosts}\r\n                          onDelete={this.deleteItem}\r\n                          onToggle={this.onToggle}\r\n                          onEdit={this.onEditItem}\r\n                />\r\n                <PostAddForm onAdd={this.addItem}/>\r\n            </AppBlock>\r\n        </Container>\r\n    }\r\n}\r\n\r\nexport default AppIndex;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport AppIndex from './components/app';\n\nReactDOM.render(\n    <AppIndex />,\n  document.getElementById('mainTag')\n);\n\n"],"sourceRoot":""}